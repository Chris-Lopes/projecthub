// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum RoleType {
  VIEWER
  STUDENT
  FACULTY
  COLLEGE
  ANON
}

model UserDB {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  roleType  RoleType
  viewer    Viewer?
  student   Student?
  faculty   Faculty?
  college   College?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Viewer {
  id        String   @id @default(uuid())
  user      UserDB   @relation(fields: [userId], references: [id])
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Student {
  id            String   @id @default(uuid())
  user          UserDB   @relation(fields: [userId], references: [id])
  userId        String   @unique
  roll_no       String   @unique
  class         String
  academic_year Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Faculty {
  id        String   @id @default(uuid())
  user      UserDB   @relation(fields: [userId], references: [id])
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model College {
  id        String   @id @default(uuid())
  user      UserDB   @relation(fields: [userId], references: [id])
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
